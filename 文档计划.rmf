{"id":"rmind_root_node","text":"super-docs","showChildren":true,"children":[{"id":"Sub1","text":"slate-plugins","showChildren":true,"children":[{"id":"db25d395d4c42242055ff5165632913a","text":"写一个插件","showChildren":true,"children":[{"id":"6297a875e11eb18cc4b87f15b3f47b4e","text":"element通过onkeydown触发设置/取消","showChildren":true,"children":[{"id":"2a406df036b7a522de7dcf7b62642a54","text":"getToggleElementOnKeyDown","showChildren":true,"children":[{"id":"e0139afe5991ffcebd39caec8da9957c","text":"路径","showChildren":true,"children":[{"id":"99cb032944932af33e035a436a6245a9","text":"packages/common/src/utils/getToggleElementOnKeyDown.ts","showChildren":true,"children":[]}]}]}]},{"id":"04abaabb49fc09d006e99fac81f56566","text":"注册插件路径","showChildren":true,"children":[{"id":"c27330f933d2d2480b610fc06bbee328","text":"docs/docusaurus.config.js","showChildren":true,"children":[]}]},{"id":"8876acb03c89ee2ae6a2fa3bff0f8162","text":"注册快捷键（约定）","showChildren":true,"children":[{"id":"6ef09b57ec885a2d8d0d1f243428e1f4","text":"packages/elements/heading/src/defaults.ts","showChildren":true,"children":[]}]}]}]},{"id":"Sub2","text":"项目","showChildren":true,"children":[{"id":"452c81b6ec5b2bdf409fb8fb4a2b8233","text":"nfes","showChildren":true,"children":[{"id":"edf0473f68a308198592c4bea3451c45","text":"book","showChildren":true,"children":[{"id":"65bac7168b5decd34b7556ab1cf4576e","text":"目录","showChildren":true,"children":[]},{"id":"19ca1fb49f1a30a8a8e3be37b4016d50","text":"正文","showChildren":true,"children":[]}]},{"id":"0461cd8caf46b2815bd163f3aac95da1","text":"权限","showChildren":true,"children":[{"id":"6483949912f98beb28dc855786ada693","text":"需求整理","showChildren":true,"children":[{"id":"05858601cb99c2be90bf712cfe0557aa","text":"之前的文件保持共享","showChildren":true,"children":[{"id":"c231af91d8a83627722e3dbcc50c8973","text":"跑数据","showChildren":true,"children":[{"id":"3f62fcafa9f7e2dec0398463d1b1556a","text":"文件夹","showChildren":true,"children":[{"id":"a8875a078fde89db1201e9c49439c07e","text":"collaborator","showChildren":true,"children":[{"id":"abb449e4b278675297bbd3c9bd23c35f","text":"all","showChildren":true,"children":[]}]}]},{"id":"c2220ab36fa337f76a467104764e76c2","text":"文件","showChildren":true,"children":[{"id":"63a1451515802f1fe9e155a0368e053a","text":"collaborator","showChildren":true,"children":[{"id":"02bcda018a7303730462ce8a3c142430","text":"all","showChildren":true,"children":[]}]}]}]}]},{"id":"243cd511a684673e8ec7b0216cbdcfec","text":"新建文件/文件夹，先私有，可以选择共享","showChildren":true,"children":[]},{"id":"0c005d7398d08e54d247f48a979f2d1d","text":"共享","showChildren":true,"children":[{"id":"cc5f31b23a82e63a8dc83e37d183f060","text":"所有人","showChildren":true,"children":[]},{"id":"9a0a9d94680f41ad82677b6e493466a8","text":"指定人","showChildren":true,"children":[]}]},{"id":"1b36235594f5edfef51c360286917fa7","text":"配置知识库","showChildren":true,"children":[{"id":"8a08c61fe8223e26998cf74cc362485a","text":"参考语雀","showChildren":true,"children":[]}]}]}]}]}]},{"id":"Sub3","text":"road-map","showChildren":true,"children":[{"id":"fe151e4d03e4c3216fcfe1ed83ddd78d","text":"绘图","showChildren":true,"children":[{"id":"201ca386c6ef686fbcd802727dcbb4f5","text":"amomind","showChildren":true,"children":[{"id":"b46fe8e82372e9d60966dec375a50534","text":"支持copy","showChildren":true,"children":[]},{"id":"1cb63bbbe2ac17e3bd48fc6c781f959a","text":"支持自动定位的开关","showChildren":true,"children":[{"id":"9f76ed3da43ee9096e6b89910b973e9f","text":"回车，和点击触发","showChildren":true,"children":[]}]},{"id":"0374047ce008abb781574d23666d357b","text":"优化输入位置最大宽度，初始化最小应该有200px吧","showChildren":true,"children":[]},{"id":"8eee42cef7902257684f6ea1501375a6","text":"优化输入法，出现分隔符的问题","showChildren":true,"children":[]},{"id":"d2e9abd04e06f26b90081daf996ce6a1","text":"增加彩虹色","showChildren":true,"children":[]}]}]},{"id":"74b56b89471d755566710713f9868a9b","text":"文档","showChildren":true,"children":[{"id":"f2c8888dc1cb0336a38396efe62b750d","text":"tripdocs","showChildren":true,"children":[{"id":"9835d083433cfdd0ff3bd9fa9cdc7dec","text":"替代md","showChildren":true,"children":[{"id":"f4938165d2b745f8d3f1992868242286","text":"为什么使用md，而非富文本","showChildren":true,"children":[]}]},{"id":"a272982ba34225a0397e1cf2abe37e1d","text":"基础","showChildren":true,"children":[{"id":"b5498bf0ae0417ebd4280ffbea25987e","text":"plate","showChildren":true,"children":[]}]},{"id":"7caf5f9162987e0e4d3bc3fb927e434d","text":"配置化","showChildren":true,"children":[{"id":"13ee289515dfbbf70e2f16dbd7c2f745","text":"核心升级","showChildren":true,"children":[]}]}]},{"id":"9b81b2dd826511b370d0a5cd2bfa45d6","text":"为什么使用tripdocs","showChildren":true,"children":[{"id":"0ada992054c393e60ba952c0c7633ad9","text":"完善可用的文档","showChildren":true,"children":[]},{"id":"0d5417338435402d4e8c5c616130f46e","text":"支持组件的定制化","showChildren":true,"children":[]},{"id":"f8aafac36d9edd5b16a58ea9c3183af8","text":"高度定制化，接受多种多样的需求","showChildren":true,"children":[]}]}]}]},{"id":"0fde1e434f40775e1d9329e355abd315","text":"\n\n在react中使用ts，最佳实践","showChildren":true,"children":[{"id":"7ac48c093789b1da7f5b86f2fed8efed","text":"\n\n写一个函数组件","showChildren":true,"children":[{"id":"3b19461f3bf1db9a2cd4108cdca37b09","text":"首先React.FC是一个类型定义，它只只带了一种类型，所以去掉不会有任何错误。 React.FunctionComponent是一个函数类型定义如下 //img1.sycdn.imooc.com/szimg/5e8fcd4809b098a400000000.jpg 添加了这个类型有什么好处呢？上面这个interface已经说明，props自动获得传入的泛型已经children属性，函数自动获得propTypes,contextTypes,defaultProps和displayName四个属性，建议你再好好看一下3-3这个小节，里面讲的很清楚。 typescript的基本作用：第一是为了获取自动联想的功能，提高效率，第二是类型检查，帮助规避错误。 这些是Reacttype的定义，可以在这里查看 https://www.npmjs.com/package/@types/react","showChildren":true,"children":[]}]},{"id":"f46a273f7b46516dceb6998855e7ff82","text":"使用typescript编写react的时候，props的interface和react本身的proptypes有什么关系","showChildren":true,"children":[{"id":"46cd5b6fef4017bad30840c06b1bb23d","text":"typescript 的类型检查是静态的，prop-types 可以在运行时进行检查。如果你传了个 offsetTop=\"abc\"，你的编辑器可能会提示你类型有误，但是在浏览器里仍然是可以正常运行的。而如果你使用了 prop-types，在浏览器里就会给出提示。","showChildren":true,"children":[]},{"id":"1aa0d296841e7fe0b0197d626c9bb635","text":"export interface AffixProps {  /**   * 距离窗口顶部达到指定偏移量后触发   */  offsetTop?: number;  offset?: number;  /** 距离窗口底部达到指定偏移量后触发 */  offsetBottom?: number;  style?: React.CSSProperties;  /** 固定状态改变时触发的回调函数 */  onChange?: (affixed?: boolean) => void;  /** 设置 Affix 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 */  target?: () => Window | HTMLElement | null;  prefixCls?: string;}","showChildren":true,"children":[]}]}]}]}